@page "/antarctica"
@using dymaptic.GeoBlazor.Core.Model
@using Point = dymaptic.GeoBlazor.Core.Components.Geometries.Point
@inject GeometryEngine GeometryEngine

<PageTitle>Antarctica</PageTitle>

<h1>Antarctica has an area of 14,200,000 square kilometers</h1>

@* Map focused on Equator, but showing a circle with the same area as Antarctica *@
<MapView @ref="_mapView" Longitude="0" Latitude="0" Zoom="2" Style="height: 800px; width: 1200px;">
    <Map>
        <Basemap>
            <BasemapStyle Name="BasemapStyleName.ArcgisTopographic" />
        </Basemap>
    </Map>
</MapView>

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            // Create a point at 0,0 so we can make a circle with the same area as antarctica. 
            Point point = new Point(x: 0, y: 0, spatialReference: SpatialReference.Wgs84);

            // Per wikipedia, the area of antarctica is 14,200,000 km^2 and the area of a circle is pi*r^2, we need to compute the radius of the circle with that area
            double radius = Math.Sqrt(14200000 / Math.PI);
            Polygon buffer = await GeometryEngine.GeodesicBuffer(point, radius, LinearUnit.Kilometers);

            // Create a Red dot symbol
            SimpleMarkerSymbol pointSymbol = new SimpleMarkerSymbol(new Outline(new MapColor("#E24E42"), 0), new MapColor("#E24E42"), 10, SimpleMarkerStyle.Circle);

            // Create a blue circle symbol
            SimpleFillSymbol circleSymbol = new SimpleFillSymbol(new Outline(new MapColor("#1D809F"), 2), new MapColor("#1D809F"));

            // Create the graphic
            Graphic bufferGraphic = new Graphic(buffer, circleSymbol);
            Graphic pointGraphic = new Graphic(point, pointSymbol);

            // Add it to the map
            await _mapView!.AddGraphic(bufferGraphic);
            await _mapView.AddGraphic(pointGraphic);
        }
    }

    private MapView? _mapView;

}